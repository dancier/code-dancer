version: "3"

# Deploying three container services (fluentd, elasticsearch, and kibana)
services: # Deploy using the custom image automatically be created during the build process.

  traefik:
    container_name: traefik
    image: "traefik:v2.9"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      #- "--certificatesresolvers.mytlschallenge.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.mytlschallenge.acme.email=marc@becheftigt.de"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8088:8080"
    volumes:
      - "./volumes/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  elasticsearch:
    image: elasticsearch:${ELASTIC_VERSION}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.elasticsearch.rule=Host(`${ELASTIC_HOST_NAME}`)"
      - "traefik.http.routers.elasticsearch.entrypoints=websecure"
      - "traefik.http.routers.elasticsearch.tls.certresolver=mytlschallenge"
    environment:
      discovery.type: single-node # Runs as a single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
    depends_on:
      - traefik
    volumes: # Stores elasticsearch data locally on the esdata Docker volume
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - ./volumes/esdata:/usr/share/elasticsearch/data

  kibana:
    image: kibana:${ELASTIC_VERSION}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.kibana.rule=Host(`${KIBANA_HOST_NAME}`)"
      - "traefik.http.routers.kibana.entrypoints=websecure"
      - "traefik.http.routers.kibana.tls.certresolver=mytlschallenge"
    links: # Links kibana service to the elasticsearch container
      - elasticsearch
    depends_on:
      - elasticsearch
      - traefik
    volumes:
      - ./kibana/config/kibana.yml://usr/share/kibana/config/kibana.yml:ro,z
    environment: # Defined host configuration
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}

